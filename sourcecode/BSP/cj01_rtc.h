#ifndef __RTC__
#define __RTC__
#include "stdint.h"
#include "stdarg.h"
#ifndef NULL
#define NULL         0
#endif


/*****************************************************************************
** 函 数 名 称 RtcOpen
** 函 数 功 能 ：打开rtc操作
** 输 入 ：   port 系统分配的端口号
**            buf  无效参数
**            buf_len 无效参数
** 输 出 ：
** 全局变量:
** 调用模块:
**
** 作　者: 杜其俊
** 日　期: 2015年1月3日
********************************************************************************/
extern int8_t RtcOpen(int32_t port, const void *config, uint8_t len);

/*****************************************************************************
** 函 数 名 称 RtcClose
** 函 数 功 能 ：关闭Rtc操作
** 输 入 ：   port 系统分配的端口号
** 输 出 ：   0 -- 关闭成功
**            1 -- 关闭失败
** 全局变量:
** 调用模块:
**
** 作　者: 杜其俊
** 日　期: 2015年1月3日
********************************************************************************/
extern int8_t RtcClose(int32_t port);

/*****************************************************************************
** 函 数 名 称 RtcWrite
** 函 数 功 能 ：更新rtc时间
** 输 入 ：   port 系统分配的端口号
**            buf  写入的数据地址，为(uint8_t *)类型
**            buf_len 读取的数据长度，此函数为无效参数
** 输 出 ： 0：写数据正确
**       ： -1:参数错误
** 全局变量:
** 调用模块:
**
** 作　者: 杜其俊
** 日　期: 2015年1月3日
********************************************************************************/
extern int8_t RtcWrite(int32_t port, void * buf, uint32_t buf_len);

/*****************************************************************************
** 函 数 名 称 RtcRead
** 函 数 功 能 ：读取Rtc时间
** 输 入 ：   port 系统分配的端口号
**            buf 读到的数据返回地址
**            buf_len 读取的数据长度，此函数为无效参数
** 输 出 ： 0：读到数据为0
**          1: 读到的数据为1
**       ： -1:参数错误
** 全局变量:
** 调用模块:
**
** 作　者: 杜其俊
** 日　期: 2015年1月3日
********************************************************************************/
extern int32_t RtcRead(int32_t port, void *buf, uint32_t buf_len);

/*****************************************************************************
** 函 数 名 称 RtcIoctl
** 函 数 功 能 ：无功能，始终返回-1，应用层不能调用该函数，只是为了适应架构
** 输 入 ：    port 系统分配的端口号
** 输 出 ：  -1 -- 参数错误
** 全局变量:
** 调用模块:
**
** 作　者: 杜其俊
** 日　期: 2015年1月3日
********************************************************************************/
extern int8_t RtcIoctl(int32_t port, uint32_t cmd, va_list args);

#define RTC_GETMILLISCOND       0
#define RTC_REINIT              1

extern uint32_t rtc_ms;

#endif
